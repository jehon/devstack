#
# - https://stackoverflow.com/a/39150040/1954789 (stdin / tty)
#

#volumes:
    # sonar_data:
    # sonar_extensions:

services:
    traefik:
        image: "traefik"
        restart: always
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--entrypoints.web.address=:80"
        ports:
            - "80:80"
            #- "81:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        labels:
            - traefik.protocol=http
            - traefik.http.middlewares.jhstriproot.stripprefixregex.regex=/[a-zA-Z0-9_-]+/
            
            - traefik.http.routers.api.rule=PathPrefix(`/api`)
            - traefik.http.routers.api.service=api@internal

            - traefik.http.routers.dashboard.rule=PathPrefix(`/dashboard`)
            - traefik.http.routers.dashboard.service=dashboard@internal
            - traefik.http.routers.dashboard.middlewares=jhstriproot@docker

    httpd:
        image: httpd:alpine
        restart: always
        expose: 
            - 80
        volumes:
            - ./httpd:/usr/local/apache2/htdocs/:ro
        labels:
            - traefik.http.routers.httpd.rule=PathPrefix(`/`)

    mail:
        # https://github.com/maildev/maildev
        image: maildev/maildev
        restart: always
        environment:
            # Not working with healthcheck: - MAILDEV_BASE_PATHNAME=/maildev/
            - MAILDEV_WEB_PORT=1080
        expose:
            - 1080
            - 1025
        labels:
            # https://github.com/maildev/maildev/issues/402
            - traefik.http.routers.mail.rule=PathPrefix(`/mail`)
            - traefik.http.routers.mail.middlewares=jhstriproot@docker
            - traefik.http.services.mail.loadbalancer.server.port=1080

    portainer:
        image: portainer/portainer-ce:latest
        restart: always
        # Need to escape all '$' into '$$'
        command: --admin-password='$$2y$$05$$s5BtawHyEHa1fYr9gfeYNOZd8/JAPeAUVfmFlvjGJpNVasmbulNEe'
        privileged: true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer:/data
        expose:
            - 9000
        labels:
            - traefik.http.routers.portainer.rule=PathPrefix(`/portainer`)
            - traefik.http.routers.portainer.middlewares=jhstriproot@docker
            - traefik.http.services.portainer.loadbalancer.server.port=9000

    jenkins:
        # Thanks to https://gist.github.com/pythoninthegrass/abb755a54ba908374e1c8bfd79d0c499
        # Image doc: https://github.com/jenkinsci/docker/blob/master/README.md
        build:
            context: jenkins
            dockerfile: Dockerfile
        restart: unless-stopped
        command: --prefix=/jenkins
        expose:
            - 8080
        healthcheck:
            test: curl -fs http://localhost:8080/jenkins/tcpSlaveAgentListener --output /dev/null
            interval: 15s
            timeout: 15s
            retries: 10
            start_period: 30s
        environment:
            PLUGINS_FORCE_UPGRADE: true
        labels:
            - traefik.http.routers.jenkins.rule=PathPrefix(`/jenkins`)

    jenkins_agent1:
        # Doc: https://hub.docker.com/r/jenkins/inbound-agent
        # Doc: https://hub.docker.com/r/jenkins/jnlp-slave
        # Image: https://hub.docker.com/r/jenkins/jnlp-agent-docker
        depends_on:
            jenkins:
                condition: service_healthy
        restart: unless-stopped
        image: jenkins/inbound-agent
        # privileged: true
        environment:
            JENKINS_URL: http://jenkins:8080/jenkins/
            JENKINS_AGENT_NAME: agent1
            JENKINS_SECRET: ${JENKINS_AGENT1_TOKEN}    
        # volumes:
        #     - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - traefik.enable=false

    # sonar:
    #     build:
    #         context: .
    #         dockerfile: sonar/Dockerfile
    ##     volumes:
    ##         - sonar_data:/opt/sonarqube/data
    ##         - sonar_extensions:/opt/sonarqube/extensions
    #     environment:
    #         SONAR_WEB_CONTEXT: "/sonar"
    #         # SONAR_WEB_PORT: 9080
    #         SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 1
    #     expose:
    #         - 9000
