#
# - https://stackoverflow.com/a/39150040/1954789 (stdin / tty)
#

#volumes:
    # sonar_data:
    # sonar_extensions:

services:
    # apache:
    #     build:
    #         context: apache
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ./apache/webroot:/usr/local/apache2/htdocs:ro
    #     ports:
    #         - 127.0.0.1:9000:80

    jenkins:
        # Thanks to https://gist.github.com/pythoninthegrass/abb755a54ba908374e1c8bfd79d0c499
        # Image doc: https://github.com/jenkinsci/docker/blob/master/README.md
        build:
            context: jenkins
            dockerfile: Dockerfile
        restart: unless-stopped
        command: --prefix=/jenkins
        ports:
            - 8080:8080
        expose:
            - 50000
            - 8080
        healthcheck:
            test: curl -fs http://localhost:8080/jenkins/tcpSlaveAgentListener --output /dev/null
            interval: 15s
            timeout: 15s
            retries: 10
            start_period: 30s
        environment:
            PLUGINS_FORCE_UPGRADE: true

    jenkins_agent1:
        # Doc: https://hub.docker.com/r/jenkins/inbound-agent
        # Doc: https://hub.docker.com/r/jenkins/jnlp-slave
        # Image: https://hub.docker.com/r/jenkins/jnlp-agent-docker
        depends_on:
            jenkins:
                condition: service_healthy
        restart: unless-stopped
        image: jenkins/inbound-agent
        # privileged: true
        environment:
            JENKINS_URL: http://jenkins:8080/jenkins/
            JENKINS_AGENT_NAME: agent1
            JENKINS_SECRET: 6c86d6d579a8c4cd873c8d9000efe7857bb87ad0b699891f39d19e674b946804   
        # volumes:
        #     - /var/run/docker.sock:/var/run/docker.sock

    portainer:
        image: portainer/portainer-ce:latest
        # Need to escape all '$' into '$$'
        command: --admin-password='$$2y$$05$$s5BtawHyEHa1fYr9gfeYNOZd8/JAPeAUVfmFlvjGJpNVasmbulNEe'
        privileged: true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        expose:
            - 9000

    # sonar:
    #     build:
    #         context: .
    #         dockerfile: sonar/Dockerfile
    ##     volumes:
    ##         - sonar_data:/opt/sonarqube/data
    ##         - sonar_extensions:/opt/sonarqube/extensions
    #     environment:
    #         SONAR_WEB_CONTEXT: "/sonar"
    #         # SONAR_WEB_PORT: 9080
    #         SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 1
    #     expose:
    #         - 9000
