#!/usr/bin/env make

#
#
# Depends on: 
#     ansible/*
#
# Generate:
#     x
#

ansible: ansible-dump ansible-build ansible-lint

ANSIBLE_TMP=tmp/ansible

ANSIBLE_SOURCE=ansible
ANSIBLE_GALAXY=$(ANSIBLE_SOURCE)/.galaxy
ANSIBLE_TEST_KEY=$(ROOT)/tests/ansible/ansible-test-key

dump: ansible-dump
clean: ansible-clean
build: ansible-build
lint: ansible-lint
test: ansible-test

.PHONY: ansible-dump
ansible-dump: ansible-dependencies
	$(call dump_space)
	$(call dump_title,ANSIBLE)
	$(call dump_info,ANSIBLE_SOURCE)
	$(call dump_info,ANSIBLE_GALAXY)
	@echo "* Ansible: "
	@type ansible
	@ansible --version | head -n 1

	@echo "* Ansible-lint:"
	@type ansible-lint
	@ansible-lint --version | head -n 1

.PHONY: ansible-clean
ansible-clean:
	rm -fr "$(ANSIBLE_GALAXY)"
	rm -fr "$(TMP_ROOT)/dev-config.json"
	rm -fr tests/ansible/built
	docker image rm -f $$( docker image ls --filter 'reference=test-ansible/*' --format '{{.Repository}}:{{.Tag}}' ) 2>/dev/null || echo "!! No image to remove"

.PHONY: ansible-build
ansible-build: ansible-dependencies

ansible-dependencies: .python/ $(ANSIBLE_TMP)/.built

.python/:
	cd $(ROOT) && $(ROOT)/build/ansible-install.sh

$(ANSIBLE_TMP)/.built: .python \
		$(shell find ansible/ | grep -v .galaxy ) \
		$(ANSIBLE_GALAXY)/.done

	@mkdir -p "$(ANSIBLE_TMP)"
	cd ansible && ansible-playbook --vault-password-file $(ANSIBLE_TEST_KEY) build-artifacts.yml
	$(call touch,$@)

$(ANSIBLE_GALAXY)/.done: ansible/requirements.yml
	mkdir -p $(ANSIBLE_GALAXY)
	( cd ansible && ansible-galaxy install --role-file requirements.yml --roles-path .galaxy/ )
	$(call touch,$@)

.PHONY: ansible-lint
ansible-lint:
	cd $(ANSIBLE_SOURCE) && ansible-lint
	@echo "$@ ok"

ansible-test: tests/ansible/built/.docker \
		tests/ansible/built/00-all_vars.yml \
		node_modules/.built

	run-parts --exit-on-error --verbose --regex "^[0-9][0-9]-.*" ./tests/ansible/

tests/ansible/built/.docker: \
		tests/ansible/built/ansible-requirements.sh \
		tests/ansible/built/ansible-install.sh \
		tests/ansible/built/00-all_vars.yml

	cd tests/ansible && DOCKER_BUILDKIT=1 docker build --tag "test-ansible/ansible:local" .

	$(call touch,$@)

tests/ansible/built/ansible-requirements.sh: .devcontainer/ansible-requirements.sh
	$(call copy,$@,$<)

tests/ansible/built/ansible-install.sh: build/ansible-install.sh
	$(call copy,$@,$<)

tests/ansible/built/00-all_vars.yml: ansible/inventory/00-all_vars.yml
	$(call mkdir,$@)
	build/ansible-no-secrets.js "ansible/inventory/00-all_vars.yml" "$@"
	$(call touch,$@)
