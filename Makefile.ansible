#!/usr/bin/env make

#
#
# Depends on: 
#     ansible/*
#
# Generate:
#     x
#

ansible: ansible-dump ansible-build ansible-lint

ANSIBLE_TMP=$(TMP_ROOT)/ansible

ANSIBLE_PRJ=ansible
ANSIBLE_ROOT=$(ROOT)/$(ANSIBLE_PRJ)
ANSIBLE_GALAXY=$(ANSIBLE_ROOT)/.galaxy
ANSIBLE_ENCRYPTION_MOCK=$(ROOT)/ansible/ansible-encryption-mock

dump: ansible-dump
clean: ansible-clean
build: ansible-build
lint: ansible-lint
test: ansible-test

.PHONY: ansible-dump
ansible-dump:
	$(call dump_space)
	$(call dump_title,ANSIBLE)
	$(call dump_info,ANSIBLE_ROOT)
	$(call dump_info,ANSIBLE_GALAXY)
	$(call dump_info,ANSIBLE_TMP)
	$(call dump_info,ANSIBLE_ENCRYPTION_MOCK)

ansible-dump-runtimes:
	@type ansible | grep "$(ROOT)/"
	@ansible --version

	@type ansible-lint | grep "$(ROOT)/"
	@ansible-lint --version

	@type ansible-playbook | grep "$(ROOT)/"
	@ansible-playbook --version

.PHONY: ansible-clean
ansible-clean:
	rm -fr "$(ANSIBLE_GALAXY)"
	rm -fr "$(TMP_ROOT)/dev-config.json"
	rm -fr tests/ansible/built
	docker image rm -f $$( docker image ls --filter 'reference=test-ansible/*' --format '{{.Repository}}:{{.Tag}}' ) 2>/dev/null || echo "!! No image to remove"

.PHONY: ansible-build
ansible-build: ansible-dependencies \
	$(ANSIBLE_TMP)/.built

.PHONY: ansible-dependencies
ansible-dependencies: .python/.built \
	$(ANSIBLE_PRJ)/built/ansible-encryption-key \
	$(ANSIBLE_PRJ)/built/ansible-ssh-key

.python/.built:
# pytest: ansible-lint
	cd $(ROOT) && pip install --upgrade --target "$(ROOT)"/.python ansible ansible-lint ansible-vault pytest
	touch "$@"

$(ANSIBLE_PRJ)/built/ansible-encryption-key:
	mkdir -p "$(ANSIBLE_PRJ)/built"
	if [ ! -r "$@" ]; then \
		if [ -r /etc/jehon/restricted/ansible-encryption-key ]; then \
			ln -fs /etc/jehon/restricted/ansible-encryption-key "$(ANSIBLE_PRJ)/built/ansible-encryption-key"; \
		else \
			echo "12345" > $(ANSIBLE_PRJ)/built/ansible-encryption-key; \
		fi \
	fi

$(ANSIBLE_PRJ)/built/ansible-ssh-key:
	if [ ! -r "$@" ]; then \
		if [ -r /etc/jehon/restricted/ansible-ssh-key ]; then \
			ln -fs /etc/jehon/restricted/ansible-ssh-key "$(ANSIBLE_ROOT)"/ansible/built/ansible-ssh-key; \
		else \
			if [ -r $(HOME)/.ssh/id_rsa ]; then \
				ln -fs $(HOME)/.ssh/id_rsa "$(ANSIBLE_ROOT)"/built/ansible-ssh-key; \
			fi \
		fi \
	fi

$(ANSIBLE_TMP)/.built: .python/.built \
		$(shell find ansible/ | grep -v .galaxy | grep -v built) \
		$(ANSIBLE_GALAXY)/.done

	@mkdir -p "$(ANSIBLE_TMP)"
	cd $(ANSIBLE_PRJ) && ansible-playbook --vault-password-file $(ANSIBLE_ENCRYPTION_MOCK) build-artifacts.yml
	$(call touch,$@)

$(ANSIBLE_GALAXY)/.done: $(ANSIBLE_PRJ)/requirements.yml
	mkdir -p $(ANSIBLE_GALAXY)
	( cd $(ANSIBLE_PRJ) && ansible-galaxy install --role-file requirements.yml --roles-path .galaxy/ )
	$(call touch,$@)

.PHONY: ansible-lint
ansible-lint: ansible-dependencies
	cd $(ANSIBLE_PRJ) && ansible-lint
	@echo "$@ ok"

ansible-test: tests/ansible/built/.docker \
		$(ANSIBLE_TMP)/00-all_vars.yml

	run-parts --exit-on-error --verbose --regex "^[0-9][0-9]-.*" ./tests/ansible/

tests/ansible/built/.docker: \
		tests/ansible/built/ansible-requirements.sh

	cd tests/ansible && DOCKER_BUILDKIT=1 docker build --tag "test-ansible/ansible:local" .

	$(call touch,$@)

tests/ansible/built/ansible-requirements.sh: .devcontainer/ansible-requirements.sh
	$(call copy,$@,$<)

$(ANSIBLE_TMP)/00-all_vars.yml: $(ANSIBLE_PRJ)/inventory/00-all_vars.yml \
		node_modules/.built \
		build/ansible-no-secrets.js

	$(call mkdir,$@)
	build/ansible-no-secrets.js "$(ANSIBLE_PRJ)/inventory/00-all_vars.yml" "$@"
	$(call touch,$@)
